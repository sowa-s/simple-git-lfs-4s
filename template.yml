AWSTemplateFormatVersion: "2010-09-09"
Outputs:
    LfsEndpoint:
        Description: Git LFS endpoint
        Value: !Sub 'https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/lfs'

Resources:
    StorageBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
    RestApi:
        Type: AWS::ApiGateway::RestApi
        Properties:
            ApiKeySourceType: 'HEADER'
            Body:
                swagger: '2.0'
                info:
                    title: 'Git LFS REST API'
                version: '1.0.0'
                x-amazon-apigateway-api-key-source : "HEADER"
                paths:
                    /{proxy+}:
                        x-amazon-apigateway-any-method:
                            produces:
                                - application/json
                            parameters:
                                - name: proxy
                                  in: path
                                  required: true
                                  type: string
                            responses: {}
                            x-amazon-apigateway-integration:
                                responses:
                                    default:
                                        statusCode: 200
                                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Lambda}/invocations'
                                passthroughBehavior: when_no_match
                                httpMethod: POST
                                contentHandling: CONVERT_TO_TEXT
                                type: aws_proxy
                            security: 
                                - api_key: [] 
                securityDefinitions:
                   api_key:
                        type: "apiKey"
                        name: "x-api-key"
                        in: "header"
            Description: Git LFS endpoint
            FailOnWarnings: true
            Name: !Ref AWS::StackName

    RestDeployment:
        Type: AWS::ApiGateway::Deployment
        Properties:
            RestApiId: !Ref RestApi
            StageName: lfs

    RestApiKey:
        Type : AWS::ApiGateway::ApiKey
        Properties: 
            Description: 'Git LFS REST API Key'
            Enabled: true
            StageKeys: 
                - RestApiId: !Ref RestApi
                  StageName: lfs
        DependsOn: RestDeployment

    RestApiUsagePlan:
        Type: AWS::ApiGateway::UsagePlan
        DependsOn: 
            - RestDeployment
        Properties:
            ApiStages:
                - ApiId: !Ref RestApi
                  Stage: lfs
            UsagePlanName: !Sub '${RestApi}-usageplan'

    RestApiUsagePlanKey:
        Type: AWS::ApiGateway::UsagePlanKey
        DependsOn:
            - RestApiKey
            - RestApiUsagePlan
        Properties : 
            KeyId: !Ref RestApiKey
            KeyType: API_KEY
            UsagePlanId: !Ref RestApiUsagePlan

    Lambda:
        Type: AWS::Lambda::Function
        Properties:
            Code:
                S3Bucket: simple-git-lfs-template
                S3Key: lambda.zip
            Description: Generates S3 signed URLs for Git LFS
            FunctionName: !Ref AWS::StackName
            Handler: Estranged.Lfs.Hosting.Lambda::Estranged.Lfs.Hosting.Lambda.LambdaEntryPoint::FunctionHandlerAsync
            MemorySize: 512
            Role: !GetAtt LambdaRole.Arn
            Runtime: provided
            Timeout: 30
            Environment:
                Variables:
                    S3_BUCKET_NAME: !Ref StorageBucket
    LambdaGatewayPermission:
        Type: AWS::Lambda::Permission
        Properties: 
            Action: lambda:InvokeFunction
            FunctionName: !GetAtt Lambda.Arn
            Principal: apigateway.amazonaws.com
            SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*
    LambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - 
                    Effect: Allow
                    Principal:
                        Service:
                            - lambda.amazonaws.com
                    Action:
                        - sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                - arn:aws:iam::aws:policy/AmazonS3FullAccess